name: Build, Test, and Publish Image to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  get-latest-tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.get_tag.outputs.new_tag }}
    steps:
      - name: Get Latest Tag from Docker Hub and Increment
        id: get_tag
        run: |
          LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/algn48/node-todo/tags/?page_size=1" | jq -r '.results[0].name' | grep -Eo '[0-9]+' || echo 0)
          NEW_TAG=$((LATEST_TAG + 1))
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

  build-image:
    runs-on: ubuntu-latest
    needs: get-latest-tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "algn48" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t algn48/node-todo:latest -t algn48/node-todo:${{ needs.get-latest-tag.outputs.new_tag }} .

  push-image:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "algn48" --password-stdin

      - name: Push Image to Docker Hub
        run: |
          docker push algn48/node-todo:latest
          docker push algn48/node-todo:${{ needs.get-latest-tag.outputs.new_tag }}

  update-argocd:
    runs-on: ubuntu-latest
    needs: push-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Deployment File
        run: |
          sed -i "s|image: algn48/node-todo:.*|image: algn48/node-todo:${{ needs.get-latest-tag.outputs.new_tag }}|g" k8s/deployment.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add k8s/deployment.yaml
          git commit -m "Updated deployment with new image tag: ${{ needs.get-latest-tag.outputs.new_tag }}"
          git push

  notify-success:
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send success notification to Teams
        uses: 8398a7/action-slack@v3
        with:
          # status: success
          teams_webhook_url: ${{ secrets.TEAMS_WEBHOOK_URL }}
          text: "✅ The Docker image has been successfully built, tested, and pushed to Docker Hub. Deployment updates have been applied!"

  notify-failure:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send failure notification to Teams
        uses: 8398a7/action-slack@v3
        with:
          # status: failure
          teams_webhook_url: ${{ secrets.TEAMS_WEBHOOK_URL }}
          text: "❌ The GitHub Actions workflow has failed. Please check the logs and address the issue."
